apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;

    worker_processes auto;
    load_module modules/ngx_http_app_protect_module.so;

    error_log /var/log/nginx/error.log debug;

    events {
        worker_connections 10240;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        sendfile on;
        keepalive_timeout 65;

        resolver 10.72.0.10;
        resolver_timeout 10s;
        include /etc/nginx/conf.d/*conf;
    }
  ap-default.conf: |
    upstream app_backend_com {
        zone app_backend_group 64k;
        server tea-svc.perservice.svc.cluster.local:80 resolve;
        server coffee-svc.perservice.svc.cluster.local:80 resolve;
    }

    server {
        listen 80;
        server_name app.example.com;
        proxy_http_version 1.1;

        app_protect_enable on;
        app_protect_security_log_enable on;
        app_protect_security_log "/etc/nginx/conf.d/custom_log_format.json" syslog:server=10.72.4.133:514;

        location / {
            client_max_body_size 0;
            app_protect_policy_file "/etc/nginx/conf.d/custom_policy.json";
            default_type text/html;
            # set your backend here
            proxy_pass http://app_backend_com;
            proxy_set_header Host $host;
        }

        location /api {
            api write=on;
            # directives limiting access to the API
        }

        location = /dashboard.html {
            root   /usr/share/nginx/html;
        }
    }
  custom_policy.json: |
    {
        "policy":
        {
            "name": "policy-acceptall",
            "template": { "name": "POLICY_TEMPLATE_NGINX_BASE" },
            "applicationLanguage": "utf-8",
            "enforcementMode": "transparent"
        }
    }
  custom_log_format.json: | 
    {
        "filter": {
            "request_type": "all"
        },
        "content": {
            "format": "splunk",
            "max_request_size": "any",
            "max_message_size": "10k"
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: perservice-nap
spec:
  replicas: 1
  selector:
    matchLabels:
      app: perservice-nap
  template:
    metadata:
      labels:
        app: perservice-nap
    spec:
      containers:
      - name: perservice-nap
        image: gcr.io/f5-gcs-4299-sales-se-nginx/matsu-nginxplus-nap
        ports:
        - containerPort: 80
        volumeMounts:
          - name: nginx-conf
            mountPath: /etc/nginx/conf.d/
            readOnly: true
        lifecycle:
          postStart:
            exec:
              command:
                - sh
                - -c
                - "cat /etc/nginx/conf.d/base/nginx.conf > /etc/nginx/nginx.conf" 
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: base/nginx.conf
              mode: 0644
            - key: ap-default.conf
              path: ap-default.conf
              mode: 0644
            - key: custom_policy.json
              path: custom_policy.json
              mode: 0644
            - key: custom_log_format.json
              path: custom_log_format.json
              mode: 0644
---
apiVersion: v1
kind: Service
metadata:
  name: perservice-nap-svc
  labels:
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: perservice-nap
